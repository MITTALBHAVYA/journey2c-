import java.util.Scanner;

public class HammingDistance {

    public static void main(String[] args) {
       
        Scanner scanner = new Scanner(System.in);

        int T = scanner.nextInt();

        while (T-- > 0) {
            String binaryString = scanner.next();
            int A = scanner.nextInt();
            int B = scanner.nextInt();

            int res = calculateHammingDistance(binaryString, A, B);

            if(res == -1){
                System.out.println("INVALID");
            }
            else{
                System.out.println(res);
            }
        }
        
    }

    private static int calculateHammingDistance(String binaryString, int A, int B) {
        int res = 0;

        for (int i = 0; i < binaryString.length() - 1; i++) {
            char ch = binaryString.charAt(i);

            if(ch != '1' && ch != '0'){
                return -1;
            }

            if(ch == '1'){
                if(A < B){
                    if(i-1 >= 0 && binaryString.charAt(i-1) == '0'){
                        res += A;
                    }
                    else if(i+1 <= (binaryString.length()-1) && binaryString.charAt(i+1) == '0'){
                        res += B;
                        i++;
                    }
                }
                else{
                    if(i+1 <= (binaryString.length()-1) && binaryString.charAt(i+1) == '0'){
                        res += B;
                        i++;
                    }
                    else if( i-1 >= 0 &&binaryString.charAt(i-1) == '0'){
                        res += A;
                    }
                }
            }
        }

        return res;
    }
}