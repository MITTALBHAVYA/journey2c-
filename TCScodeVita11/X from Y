def min_string_factor(X, Y, S, R):
    n = len(Y)
    m = len(X)

    dp = [[float('inf')] * (m + 1) for _ in range(n + 1)]

    for i in range(n + 1):
        dp[i][0] = 0

    for i in range(1, n + 1):
        for j in range(1, m + 1):
            k = 1
            while k <= min(i, m) and X[j - 1] == Y[i - k]:
                dp[i][j] = min(dp[i][j], dp[i - k][j - 1] + k * S)
                k += 1

            k = 1
            while k <= min(i, m) and X[j - 1] == Y[i - k]:
                dp[i][j] = min(dp[i][j], dp[i - k][j - 1] + (i - k) * R)
                k += 1

            dp[i][j] = min(dp[i][j], dp[i][j - 1] + S)

    result = float('inf')
    for i in range(n + 1):
        result = min(result, dp[i][m] + (n - i) * R)

    if result == float('inf'):
        return "Impossible"
    else:
        return result


# Input
X = input().strip()
Y = input().strip()
S, R = map(int, input().strip().split())

# Output
result = min_string_factor(X, Y, S, R)
print(result)